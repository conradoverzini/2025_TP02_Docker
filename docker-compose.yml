
# docker-compose.yml
services:
  # -----------------------------
  # Bases de datos
  # -----------------------------
  db-qa:
    image: mysql:8
    container_name: db-qa
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: courses_qa
      MYSQL_USER: qauser
      MYSQL_PASSWORD: qapass
    ports:
      - "3307:3306"
    volumes:
      - db-qa-data:/var/lib/mysql
    networks:
      - qa-net

  db-prod:
    image: mysql:8
    container_name: db-prod
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: courses_prod
      MYSQL_USER: produser
      MYSQL_PASSWORD: prodpass
    ports:
      - "3308:3306"
    volumes:
      - db-prod-data:/var/lib/mysql
    networks:
      - prod-net

  # -----------------------------
  # Backend
  # -----------------------------
  backend-qa:
    image: felipeeguia03/courses-backend:1.1
    container_name: backend-qa
    depends_on:
      - db-qa
    environment:
      DB_HOST: db-qa
      DB_PORT: 3306
      DB_USER: qauser
      DB_PASSWORD: qapass
      DB_NAME: courses_qa
      ENV: qa
    entrypoint: ["/app/wait-for-db.sh", "db-qa", "/app/main"]
    ports:
      - "8081:8080"
    networks:
      - qa-net

  backend-prod:
    image: felipeeguia03/courses-backend:1.1
    container_name: backend-prod
    depends_on:
      - db-prod
    environment:
      DB_HOST: db-prod
      DB_PORT: 3306
      DB_USER: produser
      DB_PASSWORD: prodpass
      DB_NAME: courses_prod
      ENV: production
    entrypoint: ["/app/wait-for-db.sh", "db-prod", "/app/main"]
    ports:
      - "8082:8080"
    networks:
      - prod-net

  # -----------------------------
  # Frontend
  # -----------------------------
  frontend-qa:
    image: felipeeguia03/courses-frontend:1.1
    container_name: frontend-qa
    ports:
      - "3001:3000"
    depends_on:
      - backend-qa
    networks:
      - qa-net

  frontend-prod:
    image: felipeeguia03/courses-frontend:1.1
    container_name: frontend-prod
    ports:
      - "3002:3000"
    depends_on:
      - backend-prod
    networks:
      - prod-net

# -----------------------------
# Vol√∫menes persistentes
# -----------------------------
volumes:
  db-qa-data:
  db-prod-data:

# -----------------------------
# Redes
# -----------------------------
networks:
  qa-net:
  prod-net:
